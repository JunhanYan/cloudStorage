<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.dao.TeamMapper">
	<resultMap id="BaseResultMap" type="com.cloud.model.Team">
		<id column="teamId" property="teamId" jdbcType="INTEGER" />
		<result column="teamName" property="teamName" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="VARCHAR" />
		<result column="ownerId" property="ownerId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		teamId, teamName, createTime, ownerId
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from team
		where teamId = #{teamId,jdbcType=INTEGER}
	</select>
	
	<select id="getTeamsByName" resultMap="BaseResultMap"
		parameterType="String">
		select
		<include refid="Base_Column_List" />
		from team
		where teamName like CONCAT('%',#{teamName,jdbcType=VARCHAR},'%' ) 
	</select>
	
	<select id="getTeamByTimeAndOwner" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from team
		where createTime = #{createTime,jdbcType=VARCHAR} and ownerId = #{ownerId,jdbcType=INTEGER}
	</select>
	
	<select id="getAllTeams" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from team
	</select>
	
	<select id="getTeamMembers" resultType="com.cloud.model.User"
		parameterType="int">
		select
		user.userId, user.userName, user.password, user.userAccount 
		from user
		JOIN user_team ON user_team.userId=user.userId and user_team.teamId=#{teamId,jdbcType=INTEGER}		
	</select>
	
	<resultMap id="TeamUserMap" type="com.cloud.model.Team" extends="BaseResultMap">
		<collection property="users" javaType="list" ofType="com.cloud.model.User">
			<id property="userId" column="userId" />
			<result property="userName" column="userName"/>
			<result property="password" column="password"/>
			<result property="userAccount" column="userAccount"/>
		</collection>
	</resultMap>
	<select id="getTeamAndMembers" resultMap="TeamUserMap"
		parameterType="int">
		select
		user.userId, user.userName, user.password, user.userAccount,
			team.teamId,team.teamName 
		from user
		JOIN user_team ON user.userId=user_team.userId and user_team.teamId=#{teamId,jdbcType=INTEGER}
		JOIN team ON
		user_team.teamId=team.teamId 
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from team
		where teamId = #{teamId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteUsersFromTeam" parameterType="java.lang.Integer">
		delete from user_team
		where teamId = #{teamId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteUserFromTeam">
		delete from user_team
		where teamId = #{teamId,jdbcType=INTEGER} and userId= #{userId,jdbcType=INTEGER}
	</delete>
	
	<insert id="insert" parameterType="com.cloud.model.Team">
		insert into team (teamId, teamName)
		values (#{teamId,jdbcType=INTEGER}, #{teamName,jdbcType=VARCHAR})
	</insert>
	
	<insert id="addUserToTeam">
		insert into user_team (userId, teamId)
		values (#{userId,jdbcType=INTEGER}, #{teamId,jdbcType=INTEGER})
	</insert>
	
	<insert id="insertSelective" parameterType="com.cloud.model.Team">
		insert into team
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="teamId != null">
				teamId,
			</if>
			<if test="teamName != null">
				teamName,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="ownerId != null">
				ownerId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="teamId != null">
				#{teamId,jdbcType=INTEGER},
			</if>
			<if test="teamName != null">
				#{teamName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="ownerId != null">
				#{ownerId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.model.Team">
		update team
		<set>
			<if test="teamName != null">
				teamName = #{teamName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="ownerId != null">
				ownerId = #{ownerId,jdbcType=INTEGER},
			</if>
		</set>
		where teamId = #{teamId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cloud.model.Team">
		update team
		set teamName = #{teamName,jdbcType=VARCHAR}
		where teamId = #{teamId,jdbcType=INTEGER}
	</update>
</mapper>