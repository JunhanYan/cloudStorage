<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.cloud.model.User">
		<id column="userId" property="userId" jdbcType="INTEGER" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="userAccount" property="userAccount" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		userId, userName, password, userAccount
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where userId = #{userId,jdbcType=INTEGER}
	</select>
	
	<select id="getAllUsers" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
	</select>
	
	<select id="login" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where userAccount = #{userAccount,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
	</select>
	<select id="verifyAccountAvaliable" resultMap="BaseResultMap"
		parameterType="String">
		select
		<include refid="Base_Column_List" />
		from user
		where userAccount = #{userAccount,jdbcType=VARCHAR}
	</select>
	
	<select id="getUserTeams" resultType="com.cloud.model.Team"
		parameterType="int">
		select
		team.teamId,team.teamName 
		from team
		JOIN user_team ON user_team.teamId=team.teamId and user_team.userId=#{userid,jdbcType=INTEGER}		
	</select>
	
	<resultMap id="UserTeamMap" type="com.cloud.model.User" extends="BaseResultMap">
		<collection property="teams" javaType="list" ofType="com.cloud.model.Team">
			<id property="teamId" column="teamId" />
			<result property="teamName" column="teamName"/>
		</collection>
	</resultMap>
	<select id="getUserAndTeams" resultMap="UserTeamMap"
		parameterType="int">
		select
		user.userId, user.userName, user.password, user.userAccount,
			team.teamId,team.teamName 
		from user
		JOIN user_team ON user.userId=user_team.userId and user_team.userId=#{userId,jdbcType=INTEGER}
		JOIN team ON
		user_team.teamId=team.teamId 
	</select>
	
	<select id="getUserRoles" resultType="com.cloud.model.Role"
		parameterType="int">
		select
		role.roleId,role.roleName 
		from role
		JOIN user_role ON user_role.roleId=role.roleId and user_role.userId=#{userId,jdbcType=INTEGER}		
	</select>
	
	<resultMap id="UserRoleMap" type="com.cloud.model.User" extends="BaseResultMap">
		<collection property="roles" javaType="list" ofType="com.cloud.model.Role">
			<id property="roleId" column="roleId" />
			<result property="roleName" column="roleName"/>
		</collection>
	</resultMap>
	<select id="getUserAndRoles" resultMap="UserRoleMap"
		parameterType="int">
		select
		user.userId, user.userName, user.password, user.userAccount,
			role.roleId,role.roleName 
		from user
		JOIN user_role ON user.userId=user_role.userId and user_role.userId=#{userId,jdbcType=INTEGER}
		JOIN role ON
		user_role.roleId=role.roleId 
	</select>
	
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where userId = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.cloud.model.User">
		insert into user (userId, userName, password,
		userAccount)
		values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{userAccount,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.cloud.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userId,
			</if>
			<if test="username != null">
				userName,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="useraccount != null">
				userAccount,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="useraccount != null">
				#{userAccount,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.model.User">
		update user
		<set>
			<if test="username != null">
				userName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="useraccount != null">
				userAccount = #{userAccount,jdbcType=VARCHAR},
			</if>
		</set>
		where userId = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cloud.model.User">
		update user
		set userName = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		userAccount = #{userAccount,jdbcType=VARCHAR}
		where userId = #{userId,jdbcType=INTEGER}
	</update>
</mapper>