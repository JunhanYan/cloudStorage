<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cloud.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.cloud.model.Role">
		<id column="roleId" property="roleId" jdbcType="INTEGER" />
		<result column="roleName" property="roleName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		roleId, roleName
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from role
		where roleId = #{roleId,jdbcType=INTEGER}
	</select>
	
	
	<select id="getAllRoles" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>
	
	<select id="getRoleMembers" resultType="com.cloud.model.User"
		parameterType="int">
		select
		user.userId, user.userName, user.password, user.userAccount 
		from user
		JOIN user_role ON user_role.userId=user.userId and user_role.roleId=#{roleId,jdbcType=INTEGER}		
	</select>
	
	<resultMap id="RoleUserMap" type="com.cloud.model.Role" extends="BaseResultMap">
		<collection property="users" javaType="list" ofType="com.cloud.model.User">
			<id property="userId" column="userId" />
			<result property="userName" column="userName"/>
			<result property="password" column="password"/>
			<result property="userAccount" column="userAccount"/>
		</collection>
	</resultMap>
	<select id="getRoleAndMembers" resultMap="RoleUserMap"
		parameterType="int">
		select
		user.userId, user.userName, user.password, user.userAccount,
			role.roleId,role.roleName 
		from user
		JOIN user_role ON user.userId=user_role.userId and user_role.roleId=#{roleId,jdbcType=INTEGER}
		JOIN role ON
		user_role.roleId=role.roleId 
	</select>
	
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from role
		where roleId = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.cloud.model.Role">
		insert into role (roleId, roleName)
		values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.cloud.model.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleId,
			</if>
			<if test="rolename != null">
				roleName,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="rolename != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cloud.model.Role">
		update role
		<set>
			<if test="rolename != null">
				roleName = #{roleName,jdbcType=VARCHAR},
			</if>
		</set>
		where roleId = #{roleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cloud.model.Role">
		update role
		set roleName = #{roleName,jdbcType=VARCHAR}
		where roleId = #{roleId,jdbcType=INTEGER}
	</update>
	
	<insert id="addUserToRole">
		insert into user_role (userId, roleId)
		values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER})
	</insert>
	
	<delete id="deleteUserFromRole">
		delete from user_role
		where roleId = #{roleId,jdbcType=INTEGER} and userId= #{userId,jdbcType=INTEGER}
	</delete>
	
	
</mapper>